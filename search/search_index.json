{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Python tutorial","text":""},{"location":"#course-content","title":"\ud83d\udcda Course Content","text":""},{"location":"#python-basics","title":"Python Basics","text":"<ul> <li>Introduction to Python</li> <li>Basic Operators</li> <li>Strings &amp; String Manipulation</li> <li>Input Function</li> <li>Comment</li> <li>Conditionals (if-else)</li> <li>Loops (for, while)</li> <li>Functions</li> <li>Importing Modules</li> <li>Lists</li> <li>Tuples</li> <li>Dictionaries</li> </ul>"},{"location":"#object-oriented-programming","title":"Object-Oriented Programming","text":"<ul> <li>Classes and Objects</li> <li>Classes and Objects 2</li> </ul>"},{"location":"#more-python-features","title":"More Python Features","text":"<ul> <li>Exception Handling</li> <li>Context Manager</li> <li>Unit Testing</li> <li>Environment Variable</li> <li>Virtual Environment</li> <li>Dependencies Management</li> </ul>"},{"location":"pandas/intro_pandas/","title":"Pandas","text":"<p>Pandas \u0e40\u0e1b\u0e47\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e07\u0e48\u0e32\u0e22\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19 Python \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e2b\u0e21\u0e32\u0e30\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19\u0e01\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e15\u0e32\u0e23\u0e32\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e17\u0e35\u0e48\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e22\u0e37\u0e14\u0e2b\u0e22\u0e38\u0e48\u0e19\u0e2a\u0e39\u0e07</p> <p>DataFrame \u0e40\u0e1b\u0e47\u0e19\u0e42\u0e04\u0e23\u0e07\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2a\u0e2d\u0e07\u0e21\u0e34\u0e15\u0e34\u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e43\u0e19\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c \u0e04\u0e25\u0e49\u0e32\u0e22\u0e01\u0e31\u0e1a spreadsheet, table \u0e43\u0e19 sql</p> <p></p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 datafame \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 dict key \u0e02\u0e2d\u0e07 dict \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e0a\u0e37\u0e48\u0e2d column \u0e41\u0e25\u0e30 values \u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19 list \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19 columns</p> <pre><code>import pandas as pd\n\ndata = {\n    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eva'],\n    'Age': [25, 30, 35, 40, 45],\n    'City': ['New York', 'Los Angeles', 'Chicago', 'San Francisco', 'Houston'],\n    'Salary': [50000, 60000, 70000, 75000, 67000],\n    'Experience': [5, 7, 10, 12, 7],\n}\n\ndf = pd.DataFrame(data)\n\nprint(df)\n\n# \u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 type \u0e02\u0e2d\u0e07 colume\nprint(df.dtypes)\n\n# \u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 dimensional \u0e02\u0e2d\u0e07 dataframe\nprint(df.shape)\n\n# \u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07 dataframe \u0e23\u0e27\u0e21\u0e17\u0e31\u0e49\u0e07 index dtypes \u0e41\u0e25\u0e30 memory usage.\nprint(df.info(verbose=True))\n\n# \u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c\nprint(df['Name'])\n\n# filter \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e2d\u0e32\u0e22\u0e38\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32 30\nprint(df[df['Age'] &gt; 30])\n\n# \u0e04\u0e33\u0e19\u0e27\u0e13\u0e2d\u0e32\u0e22\u0e38\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\naverage_age = df['Age'].mean()\nprint(average_age)\n\n# \u0e2b\u0e32\u0e04\u0e48\u0e32 max \u0e02\u0e2d\u0e07 salary\nmax_salary = df['Salary'].max()\nprint(max_salary)\n</code></pre>"},{"location":"pandas/plots_in_pandas/","title":"Plot int Pandas","text":"<p>\u0e43\u0e19\u0e2a\u0e48\u0e27\u0e19\u0e19\u0e35\u0e49\u0e08\u0e30\u0e43\u0e0a\u0e49\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01 air quality no2</p> <p>\u0e2d\u0e48\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01\u0e44\u0e1f\u0e25\u0e4c data_quality.csv</p> <pre><code>import pandas as pd\nimport matplotlib.pyplot as plt\n\nair_quality = pd.read_csv(\"data/air_quality_no2.csv\", index_col=0, parse_dates=True)\n</code></pre> <p>\u0e2a\u0e23\u0e49\u0e32\u0e07 \u0e01\u0e23\u0e32\u0e1f\u0e08\u0e32\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 <pre><code>air_quality.plot()\nplt.show()\n</code></pre></p> <p></p> <p>\u0e16\u0e49\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23 filter \u0e14\u0e39\u0e15\u0e32\u0e21\u0e1a\u0e32\u0e07 columns <pre><code>air_quality[\"station_paris\"].plot()\nplt.show()\n</code></pre></p> <p></p>"},{"location":"pandas/read_and_write_tabular_data/","title":"Read and Write tabular data","text":"<p>pandas \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e48\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01\u0e44\u0e1f\u0e25\u0e4c\u0e44\u0e14\u0e49\u0e2b\u0e25\u0e32\u0e22\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e33\u0e21\u0e32\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e2b\u0e4c</p> <p></p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e2d\u0e48\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01 csv</p> <pre><code>titanic = pd.read_csv(\"data/titanic.csv\")\n</code></pre> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e40\u0e02\u0e31\u0e22\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 dataframe \u0e40\u0e1b\u0e47\u0e19 csv <pre><code>titanic.to_csv(\"file_name.csv\")\n</code></pre></p>"},{"location":"pandas/select_subset_data/","title":"Select Subset data","text":"<p>\u0e43\u0e19\u0e2a\u0e48\u0e27\u0e19\u0e19\u0e35\u0e49\u0e08\u0e30\u0e43\u0e0a\u0e49\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01 titanic data</p>"},{"location":"pandas/select_subset_data/#select-columns","title":"Select columns","text":"<pre><code>import pandas as pd\ntitanic = pd.read_csv(\"data/titanic.csv\")\n\nages = titanic[\"Age\"]\n</code></pre>"},{"location":"pandas/select_subset_data/#select-multiple-columns","title":"Select multiple columns","text":"<pre><code>age_sex = titanic[[\"Age\", \"Sex\"]]\n</code></pre>"},{"location":"pandas/select_subset_data/#filter-rows","title":"Filter rows","text":"<p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e01\u0e32\u0e23 filter \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48 <code>age</code> &gt; 35 <pre><code>age_above_35 = titanic[titanic[\"Age\"] &gt; 35]\n</code></pre></p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23 filter \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19 rows \u0e2b\u0e25\u0e32\u0e22\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02 <pre><code>class_2_3 = titanic[(titanic[\"Pclass\"] == 2) | (titanic[\"Pclass\"] == 3)]\n\n# \u0e2b\u0e23\u0e37\u0e2d\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e23\u0e27\u0e21 2 condition \u0e44\u0e14\u0e49\u0e41\u0e1a\u0e1a\u0e19\u0e35\u0e49\nclass_2_3 = titanic[titanic[\"Pclass\"].isin([2, 3])]\n</code></pre></p>"},{"location":"pandas/select_subset_data/#select-specific-rows-and-columns","title":"Select specific rows and columns","text":"<p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 <code>Name</code> \u0e17\u0e35\u0e48 <code>Age</code> \u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32 35 <pre><code>adult_names = titanic.loc[titanic[\"Age\"] &gt; 35, \"Name\"]\n</code></pre></p>"},{"location":"python/more-features/context_manager/","title":"Context Manager","text":"<p>\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e43\u0e19 Python \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23 \u0e17\u0e23\u0e31\u0e1e\u0e22\u0e32\u0e01\u0e23 \u0e40\u0e0a\u0e48\u0e19 \u0e44\u0e1f\u0e25\u0e4c, database connection, network socket \u0e43\u0e2b\u0e49\u0e1b\u0e34\u0e14\u0e2b\u0e23\u0e37\u0e2d\u0e04\u0e37\u0e19\u0e04\u0e48\u0e32\u0e42\u0e14\u0e22\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e40\u0e2a\u0e23\u0e47\u0e08 \u0e42\u0e14\u0e22\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e40\u0e2d\u0e07</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e34\u0e14\u0e44\u0e1f\u0e25\u0e4c \u0e41\u0e1a\u0e1a\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e49 context manager</p> <pre><code>file = open(\"my_file.txt\", \"r\")\n\n# \u0e2d\u0e48\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01\u0e44\u0e1f\u0e25\u0e4c\ndata = file.read()\n\n# \u0e17\u0e33\u0e07\u0e32\u0e19\u0e01\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\nprint(data)\n\n# \u0e1b\u0e34\u0e14\u0e44\u0e1f\u0e25\u0e4c\nfile.close()\n</code></pre> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e34\u0e14\u0e44\u0e1f\u0e25\u0e4c \u0e41\u0e1a\u0e1a\u0e43\u0e0a\u0e49 context manager <pre><code>with open(\"my_file.txt\", \"r\") as file:\n    data = file.read()\n    print(data)\n</code></pre></p>"},{"location":"python/more-features/context_manager/#with","title":"\u0e02\u0e49\u0e2d\u0e14\u0e35\u0e02\u0e2d\u0e07 with","text":"<p>\u0e44\u0e1f\u0e25\u0e4c\u0e08\u0e30\u0e16\u0e39\u0e01\u0e1b\u0e34\u0e14\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e41\u0e21\u0e49\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14 \u0e25\u0e14\u0e42\u0e2d\u0e01\u0e32\u0e2a\u0e40\u0e01\u0e34\u0e14 Resource Leak \u0e42\u0e04\u0e49\u0e14\u0e2d\u0e48\u0e32\u0e19\u0e07\u0e48\u0e32\u0e22\u0e02\u0e36\u0e49\u0e19</p>"},{"location":"python/more-features/dependencies_management/","title":"Dependencies Management","text":""},{"location":"python/more-features/dependencies_management/#dependencies","title":"\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e43\u0e19\u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23 dependencies","text":"<ul> <li>poetry</li> <li>uv</li> </ul>"},{"location":"python/more-features/environment_variables/","title":"Environment Variables","text":"<p>Environment Variables (\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e2a\u0e20\u0e32\u0e1e\u0e41\u0e27\u0e14\u0e25\u0e49\u0e2d\u0e21) \u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e15\u0e31\u0e49\u0e07\u0e04\u0e48\u0e32\u0e44\u0e27\u0e49\u0e43\u0e19\u0e23\u0e30\u0e1a\u0e1a\u0e1b\u0e0f\u0e34\u0e1a\u0e31\u0e15\u0e34\u0e01\u0e32\u0e23\u0e41\u0e25\u0e30\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e44\u0e14\u0e49\u0e08\u0e32\u0e01\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21</p>"},{"location":"python/more-features/environment_variables/#using-osenviron","title":"Using os.environ","text":"<pre><code>import os\n\nhome_path = os.environ.get(\"HOME\")\npython_path = os.environ.get(\"PYTHONPATH\")\n\nprint(\"HOME:\", home_path)\nprint(\"PYTHONPATH:\", python_path)\n</code></pre>"},{"location":"python/more-features/environment_variables/#using-osgetenv","title":"Using os.getenv()","text":"<pre><code>import os\n\napi_key = os.getenv(\"API_KEY\")\ndb_user = os.getenv(\"DB_USER\", \"default_user\")\ndb_pass = os.getenv(\"DB_PASS\", \"default_pass\")\n\nprint(\"API Key:\", api_key)\nprint(\"Database User:\", db_user)\nprint(\"Database Password:\", db_pass)\n</code></pre>"},{"location":"python/more-features/exception_handling/","title":"Exception handling","text":"<p>Exception Handling \u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e17\u0e35\u0e48\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e02\u0e13\u0e30\u0e23\u0e31\u0e19\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e1b\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e19\u0e44\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e2b\u0e22\u0e38\u0e14\u0e17\u0e33\u0e07\u0e32\u0e19\u0e01\u0e30\u0e17\u0e31\u0e19\u0e2b\u0e31\u0e19</p> <p>Python \u0e21\u0e35\u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e14\u0e49\u0e27\u0e22 try-except \u0e0b\u0e36\u0e48\u0e07\u0e0a\u0e48\u0e27\u0e22\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e01\u0e31\u0e1a Exception \u0e17\u0e35\u0e48\u0e40\u0e01\u0e34\u0e14\u0e44\u0e14\u0e49</p>"},{"location":"python/more-features/exception_handling/#try-except","title":"try except","text":"<p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 try except <pre><code>try:\n    x = 0\n    y = 10 / x\n    print(y)\nexcept ZeroDivisionError:\n    print(\"\u0e04\u0e38\u0e13\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2b\u0e32\u0e23\u0e14\u0e49\u0e27\u0e22\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e44\u0e14\u0e49\")\n</code></pre></p> <p>\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e0a\u0e49 except \u0e2b\u0e25\u0e32\u0e22\u0e46 \u0e2d\u0e31\u0e19 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e01\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14 \u0e2b\u0e25\u0e32\u0e22\u0e46 \u0e41\u0e1a\u0e1a\u0e44\u0e14\u0e49 <pre><code>try:\n    x = \"0\"\n    y = 10 / x\n    print(y)\nexcept ZeroDivisionError:\n    print(\"\u0e04\u0e38\u0e13\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2b\u0e32\u0e23\u0e14\u0e49\u0e27\u0e22\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e44\u0e14\u0e49\")\nexcept TypeError:\n    print(\"\u0e15\u0e31\u0e27\u0e2b\u0e32\u0e23\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19\")\n</code></pre></p> <p>Question \u0e16\u0e49\u0e32\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e04\u0e48\u0e32 <code>x</code> \u0e40\u0e1b\u0e47\u0e19 True \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 type boolean \u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e08\u0e30\u0e40\u0e01\u0e34\u0e14 error ?</p>"},{"location":"python/more-features/exception_handling/#else-finally","title":"else, finally","text":"<ul> <li>else: \u0e08\u0e30\u0e17\u0e33\u0e07\u0e32\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e42\u0e04\u0e49\u0e14\u0e43\u0e19 try \u0e44\u0e21\u0e48\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19</li> <li>finally: \u0e08\u0e30\u0e17\u0e33\u0e07\u0e32\u0e19\u0e40\u0e2a\u0e21\u0e2d\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01 try \u0e2b\u0e23\u0e37\u0e2d except \u0e44\u0e21\u0e48\u0e27\u0e48\u0e32\u0e08\u0e30\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48</li> </ul> <pre><code>try:\n    num1 = 10\n    num2 = 2\n    result = num1 / num2\nexcept ZeroDivisionError:\n    print(\"\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2b\u0e32\u0e23\u0e14\u0e49\u0e27\u0e22\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e44\u0e14\u0e49.\")\nelse:\n    print(f\"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c: {result}\")\nfinally:\n    print(\"\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e40\u0e2a\u0e23\u0e47\u0e08\u0e2a\u0e34\u0e49\u0e19.\")\n</code></pre>"},{"location":"python/more-features/exception_handling/#custom-exception","title":"Custom Exception","text":"<p>\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2a\u0e23\u0e49\u0e32\u0e07 exception \u0e02\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e40\u0e2d\u0e07\u0e42\u0e14\u0e22\u0e01\u0e32\u0e23 extend \u0e08\u0e32\u0e01 class Exception <pre><code>class CustomException(Exception):\n    pass\n\ntry:\n    raise CustomException(\"\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e40\u0e2d\u0e07.\")\nexcept CustomException as e:\n    print(f\"Caught an error: {e}\")\n</code></pre></p>"},{"location":"python/more-features/unit_test/","title":"Unit test","text":"<p>Python \u0e21\u0e35\u0e42\u0e21\u0e14\u0e39\u0e25 unittest \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e40\u0e02\u0e35\u0e22\u0e19\u0e41\u0e25\u0e30\u0e23\u0e31\u0e19 unit test \u0e44\u0e14\u0e49\u0e07\u0e48\u0e32\u0e22</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> <pre><code>project/\n\u251c\u2500\u2500 math_operations.py\n\u251c\u2500\u2500 test_math_operations.py\n</code></pre> math_operations.py<pre><code>def divide(a: int, b: int) -&gt; int:\n    if b == 0:\n        raise ValueError(\"\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2b\u0e32\u0e23\u0e14\u0e49\u0e27\u0e22\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e44\u0e14\u0e49\")\n    return a / b\n</code></pre> test_math_operations.py<pre><code>import unittest\nimport math_operations\n\n\nclass TestMyModule(unittest.TestCase):\n    def test_given_dividend_and_non_zero_divisor_when_divided_then_correct_result_is_returned(self):\n        dividend = 20\n        divisor = 4\n\n        result = self.calculator.divide(dividend, divisor)\n\n        self.assertEqual(result, 5.0)\n\n    def test_given_divisor_is_zero_when_divided_then_value_error_is_raised(self):\n        dividend = 10\n        divisor = 0\n\n        with self.assertRaises(ValueError):\n            self.calculator.divide(dividend, divisor)\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> <p>\u0e16\u0e49\u0e32\u0e40\u0e23\u0e32\u0e23\u0e31\u0e19 file test  \u0e08\u0e30\u0e44\u0e14\u0e49\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e43\u0e19\u0e23\u0e39\u0e1b</p> <p><pre><code>python test_math_operations.py\n</code></pre> </p>"},{"location":"python/more-features/virtual_environment/","title":"Virtual Environment","text":"<p>Virtual Environment \u0e2b\u0e23\u0e37\u0e2d \u0e2a\u0e20\u0e32\u0e1e\u0e41\u0e27\u0e14\u0e25\u0e49\u0e2d\u0e21\u0e40\u0e2a\u0e21\u0e37\u0e2d\u0e19 \u0e43\u0e19 Python \u0e04\u0e37\u0e2d\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e41\u0e22\u0e01\u0e2a\u0e20\u0e32\u0e1e\u0e41\u0e27\u0e14\u0e25\u0e49\u0e2d\u0e21\u0e01\u0e32\u0e23\u0e1e\u0e31\u0e12\u0e19\u0e32 (development environment) \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e42\u0e1b\u0e23\u0e40\u0e08\u0e04\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e46 \u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e01\u0e23\u0e30\u0e17\u0e1a\u0e01\u0e31\u0e1a\u0e23\u0e30\u0e1a\u0e1a Python \u0e2b\u0e23\u0e37\u0e2d\u0e42\u0e1b\u0e23\u0e40\u0e08\u0e04\u0e2d\u0e37\u0e48\u0e19\u0e17\u0e35\u0e48\u0e2d\u0e32\u0e08\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 Python \u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19\u0e2d\u0e22\u0e39\u0e48 \u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 Virtual Environment \u0e0a\u0e48\u0e27\u0e22\u0e43\u0e2b\u0e49\u0e04\u0e38\u0e13\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e44\u0e25\u0e1a\u0e23\u0e32\u0e23\u0e35\u0e41\u0e25\u0e30\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e41\u0e22\u0e01\u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e01\u0e31\u0e19\u0e15\u0e32\u0e21\u0e42\u0e1b\u0e23\u0e40\u0e08\u0e04</p>"},{"location":"python/more-features/virtual_environment/#virtual-environment_1","title":"\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e41\u0e25\u0e30\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 Virtual Environment","text":"<ul> <li> <p>\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 Virtual Environment <pre><code>python -m venv .venv\n</code></pre></p> <ul> <li><code>.venv</code>: \u0e0a\u0e37\u0e48\u0e2d\u0e02\u0e2d\u0e07 Virtual Environment \u0e17\u0e35\u0e48\u0e08\u0e30\u0e16\u0e39\u0e01\u0e2a\u0e23\u0e49\u0e32\u0e07</li> </ul> </li> <li> <p>\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e34\u0e14\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 Virtual Environment</p> <ul> <li> <p>Windows: <pre><code>.venv\\Scripts\\activate\n</code></pre></p> </li> <li> <p>macOS \u0e2b\u0e23\u0e37\u0e2d Linux: <pre><code>source .venv/bin/activate\n</code></pre></p> </li> </ul> <p>\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e1b\u0e34\u0e14\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e41\u0e25\u0e49\u0e27\u0e08\u0e30\u0e40\u0e2b\u0e47\u0e19\u0e0a\u0e37\u0e48\u0e2d Virtual Environment \u0e41\u0e2a\u0e14\u0e07\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19 prompt \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e22\u0e37\u0e19\u0e22\u0e31\u0e19\u0e27\u0e48\u0e32\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 Virtual Environment \u0e41\u0e25\u0e49\u0e27 (\u0e40\u0e0a\u0e48\u0e19 (.venv))</p> </li> <li> <p>\u0e01\u0e32\u0e23\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e44\u0e25\u0e1a\u0e23\u0e32\u0e23\u0e35\u0e43\u0e19 Virtual Environment <pre><code>pip install httpx\n</code></pre></p> </li> <li> <p>\u0e01\u0e32\u0e23\u0e22\u0e01\u0e40\u0e25\u0e34\u0e01\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 Virtual Environment <pre><code>deactivate\n</code></pre></p> </li> </ul>"},{"location":"python/oop/classes_and_objects/","title":"Classes and Objects","text":"<p>Objects \u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e23\u0e27\u0e1a\u0e23\u0e27\u0e21\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e41\u0e25\u0e30\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e40\u0e02\u0e49\u0e32\u0e44\u0e27\u0e49\u0e43\u0e19\u0e2b\u0e19\u0e48\u0e27\u0e22\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19 \u0e27\u0e31\u0e15\u0e16\u0e38\u0e08\u0e30\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e41\u0e25\u0e30\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e21\u0e32\u0e08\u0e32\u0e01 Classes \u0e0b\u0e36\u0e48\u0e07 Classes \u0e17\u0e33\u0e2b\u0e19\u0e49\u0e32\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 template \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 Objects</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 class \u0e41\u0e25\u0e30 object</p> <pre><code>class \u0e0a\u0e37\u0e48\u0e2d\u0e04\u0e25\u0e32\u0e2a:\n    # \u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e02\u0e2d\u0e07 class (class attributes)\n    \u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 = \u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\n\n    # \u0e04\u0e2d\u0e19\u0e2a\u0e15\u0e23\u0e31\u0e04\u0e40\u0e15\u0e2d\u0e23\u0e4c (constructor)\n    def __init__(self, \u0e1e\u0e32\u0e23\u0e32\u0e21\u0e34\u0e40\u0e15\u0e2d\u0e23\u0e4c):\n        # \u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e02\u0e2d\u0e07 object (instance attributes)\n        self.\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 = \u0e04\u0e48\u0e32\n\n    # \u0e40\u0e21\u0e18\u0e2d\u0e14 (self, methods)\n    def \u0e0a\u0e37\u0e48\u0e2d\u0e40\u0e21\u0e18\u0e2d\u0e14(self):\n        # \u0e1e\u0e24\u0e15\u0e34\u0e01\u0e23\u0e23\u0e21\u0e02\u0e2d\u0e07 object\n        pass\n</code></pre> <ul> <li><code>__init__</code> \u0e04\u0e37\u0e2d constructor \u0e43\u0e19 Python \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19 method \u0e1e\u0e34\u0e40\u0e28\u0e29\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e40\u0e23\u0e35\u0e22\u0e01\u0e42\u0e14\u0e22\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e21\u0e35\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 object \u0e43\u0e2b\u0e21\u0e48\u0e08\u0e32\u0e01 class \u0e2b\u0e19\u0e36\u0e48\u0e07 \u0e46</li> <li><code>self</code> \u0e43\u0e19 Python, self \u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e41\u0e17\u0e19\u0e02\u0e2d\u0e07 object \u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19 (current instance) \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e40\u0e23\u0e35\u0e22\u0e01 method \u0e2b\u0e23\u0e37\u0e2d attributes \u0e02\u0e2d\u0e07 object \u0e19\u0e31\u0e49\u0e19 \u0e46</li> </ul>"},{"location":"python/oop/classes_and_objects/#class-cat","title":"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 Class Cat","text":"<ul> <li>\u0e21\u0e35 constructor <code>__init__</code> \u0e17\u0e35\u0e48\u0e23\u0e31\u0e1a\u0e0a\u0e37\u0e48\u0e2d (name) \u0e41\u0e25\u0e30\u0e2a\u0e35 (color) \u0e40\u0e1b\u0e47\u0e19\u0e1e\u0e32\u0e23\u0e32\u0e21\u0e34\u0e40\u0e15\u0e2d\u0e23\u0e4c</li> <li>\u0e21\u0e35 method meow \u0e17\u0e35\u0e48\u0e43\u0e2b\u0e49\u0e41\u0e21\u0e27\u0e23\u0e49\u0e2d\u0e07\u0e40\u0e2a\u0e35\u0e22\u0e07 \"Meow!\"</li> </ul> <pre><code>class Cat:\n    def __init__(self, name, color):\n        self.name = name\n        self.color = color\n\n    def meow(self):\n        print(self.name, \"says Meow!\")\n\n\ncat1 = Cat(\"Kitty\", \"Black\")\ncat2 = Cat(\"Mittens\", \"White\")\n\n# \u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07 attributes\nprint(cat1.name)\nprint(cat2.color)\n\n# \u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 method\ncat1.meow()\ncat2.meow()\n</code></pre>"},{"location":"python/oop/classes_and_objects/#inheritance","title":"Inheritance","text":"<p>\u0e01\u0e32\u0e23\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48</p> <pre><code># \u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48 (Parent class)\nclass Animal:\n    def __init__(self, name):\n        self.name = name\n\n    def speak(self):\n        print(self.name, \" makes a sound.\")\n\n# \u0e04\u0e25\u0e32\u0e2a\u0e25\u0e39\u0e01 (Child class) \u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e08\u0e32\u0e01 Animal\nclass Cat(Animal):\n    def __init__(self, name, color):\n        super().__init__(name)\n        self.color = color\n\n    def speak(self):\n        print(self.name, \" says Meow!\")\n\n# \u0e2a\u0e23\u0e49\u0e32\u0e07 object \u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e25\u0e39\u0e01\ncat1 = Cat(\"Buddy\", \"White\")\n\n# \u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48\ncat1.speak()  # Buddy says Meow!\n</code></pre>"},{"location":"python/oop/classes_and_objects/#multiple-inheritance","title":"Multiple Inheritance","text":"<p>\u0e01\u0e32\u0e23\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e2b\u0e25\u0e32\u0e22\u0e04\u0e25\u0e32\u0e2a\u0e43\u0e19 Python \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e17\u0e33\u0e44\u0e14\u0e49\u0e42\u0e14\u0e22\u0e01\u0e32\u0e23\u0e23\u0e30\u0e1a\u0e38\u0e2b\u0e25\u0e32\u0e22\u0e04\u0e25\u0e32\u0e2a\u0e43\u0e19\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14 (separated by commas) \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e38\u0e13\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e04\u0e25\u0e32\u0e2a\u0e25\u0e39\u0e01 (child class) \u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e04\u0e38\u0e13\u0e2a\u0e21\u0e1a\u0e31\u0e15\u0e34\u0e41\u0e25\u0e30\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e2d\u0e07</p> <pre><code># \u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48 1\nclass A:\n    def show(self):\n        return \"A\"\n\nclass B():\n    def show(self):\n        return \"B\"\n\nclass C(B, A):\n    pass\n\nobj = C()\nprint(obj.show())  # B\n</code></pre>"},{"location":"python/oop/classes_method/","title":"Classes and Objects","text":""},{"location":"python/oop/classes_method/#instance-method","title":"Instance Method","text":"<p>\u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a \u0e2d\u0e48\u0e32\u0e19/\u0e41\u0e01\u0e49\u0e44\u0e02\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07 object</p> <pre><code>class A():\n    value = \"123\"\n\n    def get_value(self):\n        return self.value\n\na = A()\nprint(a.get_value())\n</code></pre>"},{"location":"python/oop/classes_method/#class-method","title":"Class Method","text":"<p>\u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a \u0e2d\u0e48\u0e32\u0e19/\u0e41\u0e01\u0e49\u0e44\u0e02 Class Attribute</p> <pre><code>class A():\n    value = \"123\"\n\n    @classmethod\n    def set_value_with_cls(cls, value):\n        cls.value = value\n\n    def get_value(self):\n        return self.value\n\n    def set_value(self, value):\n        self.value = value\n\n\na1 = A()\na2 = A()\n\n\nprint(\"set value `456` with out classmethod in object a1\")\na1.set_value(\"456\")\nprint(f\"a1.value -&gt; {a1.get_value()}\")\nprint(f\"a2.value -&gt; {a2.get_value()}\")\n\nprint(\"\\n\")\n\nb1 = A()\nb2 = A()\nprint(\"set value `c` with classmethod in object b1\")\nb1.set_value_with_cls(\"c\")\nprint(f\"b1.value -&gt; {b1.get_value()}\")\nprint(f\"b2.value -&gt; {b2.get_value()}\")\n</code></pre>"},{"location":"python/oop/classes_method/#static-method","title":"Static Method","text":"<p>\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e1a\u0e04\u0e25\u0e32\u0e2a \u0e41\u0e15\u0e48\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e0a\u0e49\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07\u0e2d\u0e47\u0e2d\u0e1a\u0e40\u0e08\u0e47\u0e01\u0e15\u0e4c\u0e2b\u0e23\u0e37\u0e2d\u0e04\u0e25\u0e32\u0e2a</p> <pre><code>class Employee:\n    company = \"TechCorp\"\n\n    @staticmethod\n    def is_high_salary(salary):\n        return salary &gt; 50000\n</code></pre>"},{"location":"python/oop/classes_method/#property-method","title":"Property Method","text":"<p>\u0e40\u0e1b\u0e47\u0e19 Pythonic Way \u0e43\u0e19\u0e01\u0e32\u0e23\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e40\u0e21\u0e18\u0e2d\u0e14 \u0e16\u0e39\u0e01\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e40\u0e1b\u0e47\u0e19 Attribute</p> <pre><code>class Employee:\n    company = \"TechCorp\"\n\n    @property\n    def company_name(self):\n        return f\"Commany name is {self.company}\"\n\n\nemp = Employee()\nprint(emp.company_name)\n</code></pre>"},{"location":"python/python-basic/basic_operators/","title":"Basic Operators","text":""},{"location":"python/python-basic/basic_operators/#arithmetic-operators","title":"Arithmetic Operators","text":"<p>\u0e43\u0e19 python \u0e21\u0e35\u0e15\u0e31\u0e27\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e01\u0e32\u0e23\u0e1a\u0e27\u0e01 \u0e25\u0e1a \u0e04\u0e39\u0e13 \u0e41\u0e25\u0e30\u0e2b\u0e32\u0e23 \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e01\u0e31\u0e1a\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e44\u0e14\u0e49</p> <ul> <li> <p><code>+</code>   Addition (\u0e1a\u0e27\u0e01)</p> <pre><code>number = 5 + 3\nprint(number)\n# 8\n</code></pre> </li> <li> <p><code>-</code>   Subtraction (\u0e25\u0e1a)</p> <pre><code>number = 5 - 3\nprint(number)\n# 2\n</code></pre> </li> <li> <p><code>*</code>   Multiplication (\u0e04\u0e39\u0e13)</p> <pre><code>number = 5 * 3\nprint(number)\n# 15\n</code></pre> </li> <li> <p><code>/</code>   Division (\u0e2b\u0e32\u0e23\u0e41\u0e1a\u0e1a\u0e17\u0e28\u0e19\u0e34\u0e22\u0e21)</p> <pre><code>number = 5 / 2\nprint(number)\n# 2.5\n</code></pre> </li> <li> <p><code>//</code>  Floor Division (\u0e2b\u0e32\u0e23\u0e41\u0e1a\u0e1a\u0e1b\u0e31\u0e14\u0e40\u0e28\u0e29\u0e25\u0e07)</p> <pre><code>number = 5 // 2\nprint(number)\n# 2\n</code></pre> </li> <li> <p><code>%</code>   Modulus (\u0e2b\u0e32\u0e23\u0e40\u0e2d\u0e32\u0e40\u0e28\u0e29)</p> <pre><code>number = 5 % 2\nprint(number)\n# 1\n</code></pre> </li> <li> <p><code>**</code>  Exponentiation (\u0e22\u0e01\u0e01\u0e33\u0e25\u0e31\u0e07)</p> <pre><code>number = 5 ** 2\nprint(number)\n# 25\n</code></pre> </li> </ul>"},{"location":"python/python-basic/basic_operators/#comparison-operators","title":"Comparison Operators","text":"<p>\u0e43\u0e0a\u0e49\u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e04\u0e48\u0e32\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e41\u0e25\u0e30\u0e04\u0e37\u0e19\u0e04\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19 True \u0e2b\u0e23\u0e37\u0e2d False</p> <ul> <li> <p><code>==</code>      Equal to (\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e19)  </p> <pre><code>result = 5 == 2\nprint(result)\n# False\n</code></pre> </li> <li> <p><code>!=</code>      Not equal to (\u0e44\u0e21\u0e48\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e19)</p> <pre><code>result = 5 != 2\nprint(result)\n# True\n</code></pre> </li> <li> <p><code>&gt;</code>       Greater than (\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32)</p> <pre><code>result = 5 &gt; 2\nprint(result)\n# True\n</code></pre> </li> <li> <p><code>&lt;</code>       Less than (\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32)</p> <pre><code>result = 5 &lt; 2\nprint(result)\n# False\n</code></pre> </li> <li> <p><code>&gt;=</code>      Greater than or equal to (\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32\u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a)</p> <pre><code>result = 5 &gt;= 2\nprint(result)\n# True\n</code></pre> </li> <li> <p><code>&lt;=</code>      Less than or equal to (\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32\u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a)</p> <pre><code>result = 5 &lt;= 3\nprint(result)\n# False\n</code></pre> </li> </ul>"},{"location":"python/python-basic/basic_operators/#logical-operators","title":"Logical Operators","text":"<p>\u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e17\u0e33\u0e07\u0e32\u0e19\u0e01\u0e31\u0e1a\u0e04\u0e48\u0e32\u0e17\u0e32\u0e07\u0e15\u0e23\u0e23\u0e01\u0e28\u0e32\u0e2a\u0e15\u0e23\u0e4c (True / False)</p> <ul> <li> <p><code>and</code>     Returns True if both conditions are True</p> <pre><code>result = (10 &gt; 5) and (5 &lt; 10)\nprint(result)\n# True\n</code></pre> </li> <li> <p><code>or</code>      Returns True if at least one condition is True</p> <pre><code>result = (5 &gt; 3) or (10 &lt; 5)\nprint(result)\n# True\n</code></pre> </li> <li> <p><code>not</code>      Returns the opposite boolean value</p> <pre><code>result = not(5 &gt; 3)\nprint(result)\n# False\n</code></pre> </li> </ul>"},{"location":"python/python-basic/basic_python/","title":"Introduction to Python","text":""},{"location":"python/python-basic/basic_python/#example-code","title":"Example Code","text":"<p>\u0e43\u0e0a\u0e49\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07 print \u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21 <code>Hello world</code></p> <pre><code>print(\"hello \")\n</code></pre>"},{"location":"python/python-basic/basic_python/#download","title":"Download","text":"<p>\u0e41\u0e19\u0e30\u0e19\u0e33\u0e43\u0e2b\u0e49\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07 Python \u0e1c\u0e48\u0e32\u0e19 official Website</p>"},{"location":"python/python-basic/basic_python/#python","title":"\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e40\u0e27\u0e2d\u0e23\u0e4c\u0e0a\u0e31\u0e19 Python:","text":"<pre><code>python --version\n</code></pre>"},{"location":"python/python-basic/basic_python/#running-python-code","title":"Running Python Code","text":""},{"location":"python/python-basic/basic_python/#repl-read-eval-print-loop","title":"REPL (Read-Eval-Print Loop)","text":"<p><pre><code>python\n</code></pre> </p>"},{"location":"python/python-basic/basic_python/#run-py","title":"Run \u0e44\u0e1f\u0e25\u0e4c <code>.py</code>","text":"<pre><code>python main.py\n</code></pre>"},{"location":"python/python-basic/basic_python/#variables-and-types","title":"Variables and Types","text":"<p>\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07 primitive type</p> <pre><code># Integer\na = 5\nprint(type(a))\nprint(isinstance(a, int))\n\n# Float\nb = 10.11\nprint(type(b))\n\n# Boolean\nc = True\nprint(type(c))\n\n# String\nd = \"Hello\"\nprint(type(d))\n</code></pre>"},{"location":"python/python-basic/comments/","title":"Introduction to Python","text":""},{"location":"python/python-basic/comments/#single-line-comment","title":"Single-line comment","text":"<pre><code># \u0e19\u0e35\u0e48\u0e04\u0e37\u0e2d\u0e04\u0e2d\u0e21\u0e40\u0e21\u0e19\u0e15\u0e4c\nprint(\"Hello, World!\")  # \u0e04\u0e2d\u0e21\u0e40\u0e21\u0e19\u0e15\u0e4c\u0e17\u0e49\u0e32\u0e22\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\n</code></pre>"},{"location":"python/python-basic/comments/#multi-line-comment","title":"Multi-line comment","text":"<pre><code>\"\"\"\n\u0e19\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e2d\u0e21\u0e40\u0e21\u0e19\u0e15\u0e4c\u0e2b\u0e25\u0e32\u0e22\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\n\u0e43\u0e0a\u0e49\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e15\u0e34\u0e21\n\"\"\"\nprint(\"Hello, Python!\")\n</code></pre>"},{"location":"python/python-basic/conditionals/","title":"conditionals","text":"<p>\u0e43\u0e19 Python, Condition  \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e04\u0e48\u0e32\u0e41\u0e25\u0e30\u0e15\u0e31\u0e14\u0e2a\u0e34\u0e19\u0e43\u0e08\u0e27\u0e48\u0e32\u0e08\u0e30\u0e17\u0e33\u0e2d\u0e30\u0e44\u0e23\u0e43\u0e19\u0e01\u0e23\u0e13\u0e35\u0e15\u0e48\u0e32\u0e07 \u0e46 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07 \u0e40\u0e0a\u0e48\u0e19 if, elif, \u0e41\u0e25\u0e30 else</p>"},{"location":"python/python-basic/conditionals/#if","title":"IF","text":"<pre><code>x = 10\nif x &gt; 5:\n    print(\"x is greater than 5\")\n</code></pre>"},{"location":"python/python-basic/conditionals/#if-else","title":"IF ELSE","text":"<pre><code>x = 10\nif x &gt; 5:\n    print(\"x is greater than 5\")\nelse\n    print(\"x is less than 5\")\n</code></pre>"},{"location":"python/python-basic/conditionals/#if-elif-else","title":"IF ELIF ELSE","text":"<pre><code>x = 7\nif x &gt; 10:\n    print(\"x is greater than 10\")\nelif x &gt; 5:\n    print(\"x is greater than 5 but less than or equal to 10\")\nelse:\n    print(\"x is 5 or less\")\n</code></pre>"},{"location":"python/python-basic/conditionals/#and-or-not","title":"And-Or-Not","text":"<pre><code>x = 7\ny = 10\n\n# \u0e43\u0e0a\u0e49 `and`:\nif x &gt; 5 and y &gt; 5:\n    print(\"Both x and y are greater than 5\")\n\n# \u0e43\u0e0a\u0e49 `or`:\nif x &gt; 5 or y &gt; 15:\n    print(\"At least one of x or y is greater than 5\")\n\n# \u0e43\u0e0a\u0e49 `not`:\nif not x &gt; 10:\n    print(\"x is not greater than 10\")\n</code></pre>"},{"location":"python/python-basic/dictionaries/","title":"Dictionaries","text":"<p>\u0e42\u0e04\u0e23\u0e07\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e04\u0e39\u0e48\u0e02\u0e2d\u0e07 key \u0e41\u0e25\u0e30 value \u0e0b\u0e36\u0e48\u0e07 key \u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07 value \u0e42\u0e14\u0e22\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2b\u0e25\u0e32\u0e22\u0e0a\u0e19\u0e34\u0e14\u0e44\u0e14\u0e49 (heterogeneous) \u0e41\u0e25\u0e30 key \u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e44\u0e21\u0e48\u0e0b\u0e49\u0e33\u0e01\u0e31\u0e19</p> <p>key : \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e1b\u0e47\u0e19\u0e44\u0e14\u0e49\u0e2b\u0e25\u0e32\u0e22\u0e0a\u0e19\u0e34\u0e14: \u0e40\u0e0a\u0e48\u0e19 string, int, float, tuple value: \u0e04\u0e48\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e1b\u0e47\u0e19\u0e0a\u0e19\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2d\u0e30\u0e44\u0e23\u0e01\u0e47\u0e44\u0e14\u0e49</p>"},{"location":"python/python-basic/dictionaries/#dict","title":"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 dict","text":"<pre><code>my_dict = {\"name\": \"Alice\", \"age\": 30, \"city\": \"Bangkok\"}\nprint(my_dict)\n</code></pre>"},{"location":"python/python-basic/dictionaries/#key","title":"\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e04\u0e48\u0e32\u0e08\u0e32\u0e01 key","text":"<pre><code>my_dict = {\"name\": \"Alice\", \"age\": 30, \"city\": \"Bangkok\"}\nprint(my_dict[\"name\"])\nprint(my_dict[\"age\"])\n</code></pre> <p>\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 get() \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07 value (\u0e16\u0e49\u0e32 key \u0e44\u0e21\u0e48\u0e21\u0e35\u0e08\u0e30\u0e04\u0e37\u0e19\u0e04\u0e48\u0e32 None \u0e2b\u0e23\u0e37\u0e2d\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14) <pre><code>my_dict = {\"name\": \"Alice\", \"age\": 30, \"city\": \"Bangkok\"}\nprint(my_dict.get(\"city\"))\nprint(my_dict.get(\"country\", \"Unknown\"))\n</code></pre></p> <p>\u0e01\u0e32\u0e23\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u0e01\u0e32\u0e23\u0e41\u0e01\u0e49\u0e44\u0e02\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u0e01\u0e32\u0e23\u0e25\u0e1a \u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 pop <pre><code># \u0e01\u0e32\u0e23\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\nmy_dict[\"country\"] = \"USA\"\nprint(my_dict)\n\n# \u0e01\u0e32\u0e23\u0e41\u0e01\u0e49\u0e44\u0e02\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\nmy_dict[\"age\"] = 26\nprint(my_dict)\n\n# \u0e01\u0e32\u0e23\u0e25\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\ndel my_dict[\"city\"]\nprint(my_dict)\n\n# \u0e43\u0e0a\u0e49 pop() \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e25\u0e1a\u0e41\u0e25\u0e30\u0e04\u0e37\u0e19\u0e04\u0e48\u0e32\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\nage = my_dict.pop(\"age\")\nprint(age)\nprint(my_dict)\n</code></pre></p>"},{"location":"python/python-basic/function/","title":"Functions","text":"<p>Functions \u0e40\u0e1b\u0e47\u0e19\u0e27\u0e34\u0e18\u0e35\u0e17\u0e35\u0e48\u0e2a\u0e30\u0e14\u0e27\u0e01\u0e43\u0e19\u0e01\u0e32\u0e23\u0e41\u0e1a\u0e48\u0e07\u0e42\u0e04\u0e49\u0e14 \u0e2d\u0e2d\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e1a\u0e25\u0e47\u0e2d\u0e01 \u0e0a\u0e48\u0e27\u0e22\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e08\u0e31\u0e14\u0e23\u0e30\u0e40\u0e1a\u0e35\u0e22\u0e1a\u0e42\u0e04\u0e49\u0e14 \u0e17\u0e33\u0e43\u0e2b\u0e49\u0e42\u0e04\u0e49\u0e14\u0e2d\u0e48\u0e32\u0e19\u0e07\u0e48\u0e32\u0e22\u0e02\u0e36\u0e49\u0e19 \u0e43\u0e0a\u0e49\u0e0b\u0e49\u0e33\u0e44\u0e14\u0e49</p>"},{"location":"python/python-basic/function/#function","title":"\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 Function","text":"<p>\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e43\u0e0a\u0e49\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07 <code>def</code> \u0e15\u0e32\u0e21\u0e14\u0e49\u0e27\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e41\u0e25\u0e30\u0e27\u0e07\u0e40\u0e25\u0e47\u0e1a () \u0e40\u0e0a\u0e48\u0e19</p> math_operations.py<pre><code>def sum_two_numbers(a, b):\n    return a + b\n\nsum_two_numbers(1, 3)\n</code></pre> math_operations.py<pre><code>def sum_two_numbers(a: int, b: int) -&gt; int:\n    return a + b\n\nsum_two_numbers(1, 3)\n</code></pre>"},{"location":"python/python-basic/function/#function-default-parameters","title":"\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 Function \u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19 (Default Parameters)","text":"math_operations.py<pre><code>def sum_two_numbers(a: int, b: int = 0) -&gt; int:\n    return a + b\n\nsum_two_numbers(1)\n</code></pre>"},{"location":"python/python-basic/function/#arguments","title":"\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e44\u0e21\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e08\u0e33\u0e19\u0e27\u0e19 Arguments","text":"<p>Python \u0e23\u0e2d\u0e07\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2a\u0e48\u0e07 arguments \u0e41\u0e1a\u0e1a\u0e44\u0e21\u0e48\u0e08\u0e33\u0e01\u0e31\u0e14\u0e08\u0e33\u0e19\u0e27\u0e19\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49  - <code>*args</code>  (Arguments)  - <code>**kwargs</code> (Keyword Arguments) \u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e23\u0e31\u0e1a\u0e04\u0e48\u0e32\u0e1e\u0e32\u0e23\u0e32\u0e21\u0e34\u0e40\u0e15\u0e2d\u0e23\u0e4c\u0e43\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a key-value \u0e08\u0e33\u0e19\u0e27\u0e19\u0e44\u0e21\u0e48\u0e08\u0e33\u0e01\u0e31\u0e14\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19</p> <pre><code>def add_all(*args):\n    return sum(args)\n\ndef print_info(**kwargs):\n    for key, value in kwargs.items():\n        print(f\"{key}: {value}\")\n\nprint(add_all(1, 2, 3, 4))\n\nprint(name=\"Alice\", age=25, city=\"Bangkok\")\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e23\u0e31\u0e1a args \u0e41\u0e25\u0e30 *kwargs \u0e15\u0e49\u0e2d\u0e07\u0e08\u0e31\u0e14\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49: <pre><code>def func(positional_args, *args, **kwargs)\n    pass\n</code></pre></p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 <pre><code>def example_function(a, b, *args, **kwargs):\n    print(f\"a: {a}, b: {b}\")\n    print(f\"args: {args}\")\n    print(f\"kwargs: {kwargs}\")\n\nexample_function(1, 2, 3, 4, name=\"Alice\", age=25)\n</code></pre></p>"},{"location":"python/python-basic/importing_modules/","title":"Importing Modules","text":"<p>\u0e42\u0e21\u0e14\u0e39\u0e25\u0e43\u0e19 Python \u0e04\u0e37\u0e2d\u0e44\u0e1f\u0e25\u0e4c python \u0e17\u0e35\u0e48\u0e21\u0e35\u0e19\u0e32\u0e21\u0e2a\u0e01\u0e38\u0e25 .py \u0e0a\u0e37\u0e48\u0e2d\u0e02\u0e2d\u0e07\u0e42\u0e21\u0e14\u0e39\u0e25\u0e08\u0e30\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e1a\u0e0a\u0e37\u0e48\u0e2d\u0e44\u0e1f\u0e25\u0e4c\u0e19\u0e31\u0e49\u0e19 \u0e46 \u0e42\u0e14\u0e22\u0e43\u0e19\u0e42\u0e21\u0e14\u0e39\u0e25 Python \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e21\u0e35 functions, classes, \u0e2b\u0e23\u0e37\u0e2d variables \u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e41\u0e25\u0e30\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e44\u0e14\u0e49\u0e20\u0e32\u0e22\u0e43\u0e19\u0e44\u0e1f\u0e25\u0e4c\u0e19\u0e31\u0e49\u0e19.</p> <p>The example above includes two files: \u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e08\u0e30\u0e21\u0e35 python 2 \u0e44\u0e1f\u0e25\u0e4c</p> <pre><code>project/\n\u251c\u2500\u2500 math_operations.py\n\u251c\u2500\u2500 main.py\n</code></pre> math_operations.py<pre><code>def add(a: int, b: int) -&gt; int:\n    return a + b\n\ndef subtract(a: int, b: int) -&gt; int:\n    return a - b\n</code></pre> main.py<pre><code>import math_operations\n\nresult = math_operations.add(5, 3)\nprint(result)\n</code></pre>"},{"location":"python/python-basic/input_function/","title":"Basic Operators","text":"<p>\u0e43\u0e19 python \u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e23\u0e31\u0e1a input \u0e08\u0e32\u0e01 user \u0e44\u0e14\u0e49\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 <code>input()</code></p> <pre><code>name = input(\"Enter your name: \")\nprint(\"Hello, \" + name + \"!\")\n</code></pre>"},{"location":"python/python-basic/lists/","title":"List and Tuples","text":"<p>List \u0e40\u0e1b\u0e47\u0e19\u0e42\u0e04\u0e23\u0e07\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e0a\u0e19\u0e34\u0e14\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e43\u0e19 Python \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e40\u0e01\u0e47\u0e1a \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2b\u0e25\u0e32\u0e22\u0e04\u0e48\u0e32\u0e43\u0e19\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19 \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e0a\u0e19\u0e34\u0e14\u0e43\u0e14\u0e01\u0e47\u0e44\u0e14\u0e49 (String, Number, Boolean, Object \u0e2f\u0e25\u0e2f) \u0e41\u0e25\u0e30\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e04\u0e48\u0e32\u0e44\u0e14\u0e49 (Mutable)</p>"},{"location":"python/python-basic/lists/#list","title":"\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 List","text":"<pre><code># List \u0e17\u0e35\u0e48\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e15\u0e48\u0e32\u0e07\u0e46\nnumbers = [1, 2, 3, 4, 5]           # List \u0e02\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\nfruits = [\"apple\", \"banana\", \"cherry\"]  # List \u0e02\u0e2d\u0e07 string\nmixed = [10, \"Hello\", True, 3.14]   # List \u0e17\u0e35\u0e48\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2b\u0e25\u0e32\u0e22\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\n\nprint(numbers)   # [1, 2, 3, 4, 5]\nprint(fruits)    # ['apple', 'banana', 'cherry']\nprint(mixed)     # [10, 'Hello', True, 3.14]\n</code></pre>"},{"location":"python/python-basic/lists/#list_1","title":"\u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e04\u0e48\u0e32\u0e20\u0e32\u0e22\u0e43\u0e19 List","text":"<p>\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e43\u0e19 list \u0e44\u0e14\u0e49\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 index (\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e17\u0e35\u0e48 0)</p> <pre><code>fruits = [\"apple\", \"banana\", \"cherry\"]\n\nprint(fruits[0])   # apple\nprint(fruits[1])   # banana\nprint(fruits[2])   # cherry\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e43\u0e0a\u0e49 index \u0e15\u0e34\u0e14\u0e25\u0e1a \u0e08\u0e30\u0e19\u0e31\u0e1a\u0e08\u0e32\u0e01\u0e17\u0e49\u0e32\u0e22\u0e2a\u0e38\u0e14\u0e02\u0e2d\u0e07 list <pre><code>print(fruits[-1])  # cherry\nprint(fruits[-2])  # banana\n</code></pre></p>"},{"location":"python/python-basic/lists/#list_2","title":"\u0e01\u0e32\u0e23\u0e41\u0e01\u0e49\u0e44\u0e02\u0e04\u0e48\u0e32\u0e43\u0e19 List","text":"<pre><code>fruits = [\"apple\", \"banana\", \"cherry\"]\nfruits[1] = \"orange\"  # \u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19 'banana' \u0e40\u0e1b\u0e47\u0e19 'orange'\n\nprint(fruits)  # ['apple', 'orange', 'cherry']\n</code></pre>"},{"location":"python/python-basic/lists/#list_3","title":"\u0e01\u0e32\u0e23\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e04\u0e48\u0e32\u0e40\u0e02\u0e49\u0e32 List","text":"<ul> <li> <p>append() \u2192 \u0e40\u0e1e\u0e34\u0e48\u0e21\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e17\u0e49\u0e32\u0e22 list     <pre><code>fruits.append(\"mango\")\nprint(fruits)  # ['apple', 'orange', 'cherry', 'mango']\n</code></pre></p> </li> <li> <p>insert(index, value)     <pre><code>fruits.insert(1, \"grape\")\nprint(fruits)  # ['apple', 'grape', 'orange', 'cherry', 'mango']\n</code></pre></p> </li> </ul>"},{"location":"python/python-basic/lists/#list_4","title":"\u0e01\u0e32\u0e23\u0e25\u0e1a\u0e04\u0e48\u0e32\u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01 List","text":"<ul> <li> <p>remove(value) \u2192 \u0e25\u0e1a\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14 (\u0e15\u0e31\u0e27\u0e41\u0e23\u0e01\u0e17\u0e35\u0e48\u0e40\u0e08\u0e2d)     <pre><code>fruits = [\"apple\", \"banana\", \"cherry\", \"orange\"]\nfruits.remove(\"orange\")\nprint(fruits)  # [\"apple\", \"banana\", \"cherry\"]\n</code></pre></p> </li> <li> <p>pop(index) \u2192 \u0e25\u0e1a\u0e04\u0e48\u0e32\u0e15\u0e32\u0e21 index (\u0e16\u0e49\u0e32\u0e44\u0e21\u0e48\u0e23\u0e30\u0e1a\u0e38 index \u0e08\u0e30\u0e25\u0e1a\u0e15\u0e31\u0e27\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22)     <pre><code>fruits = [\"apple\", \"banana\", \"cherry\", \"orange\"]\nfruits.pop(2)  # \u0e25\u0e1a index \u0e17\u0e35\u0e48 2 ('cherry')\nprint(fruits)  # ['apple', 'cherry', 'orange']\n</code></pre></p> </li> <li> <p>del \u2192 \u0e25\u0e1a\u0e04\u0e48\u0e32\u0e15\u0e32\u0e21 index \u0e2b\u0e23\u0e37\u0e2d \u0e25\u0e1a\u0e17\u0e31\u0e49\u0e07 list     <pre><code>fruits = [\"apple\", \"banana\", \"cherry\", \"orange\"]\ndel fruits[1]  # \u0e25\u0e1a index 1 ('banana')\nprint(fruits)  # ['apple', 'cherry'. 'orange']\n\ndel fruits  # \u0e25\u0e1a\u0e17\u0e31\u0e49\u0e07 list\n</code></pre></p> </li> <li> <p>clear() \u2192 \u0e25\u0e49\u0e32\u0e07\u0e04\u0e48\u0e32\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 \u0e41\u0e15\u0e48\u0e44\u0e21\u0e48\u0e25\u0e1a\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23     <pre><code>fruits = [\"apple\", \"banana\", \"cherry\", \"orange\"]\nfruits.clear()\nprint(fruits)  # []\n</code></pre></p> </li> </ul>"},{"location":"python/python-basic/lists/#string-methods","title":"String Methods","text":"<ul> <li> <p>lowerlen(list)    \u0e2b\u0e32\u0e08\u0e33\u0e19\u0e27\u0e19\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e43\u0e19 list     <pre><code>numbers = [3, 1, 4, 1, 5, 9, 2]\n</code></pre></p> </li> <li> <p>lowerlist.sort()  \u0e40\u0e23\u0e35\u0e22\u0e07\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01 (\u0e19\u0e49\u0e2d\u0e22 -&gt; \u0e21\u0e32\u0e01, A -&gt; Z)     <pre><code>numbers = [3, 1, 4, 1, 5, 9, 2]\nnumbers.sort()\n</code></pre></p> </li> <li> <p>lowerlist.reverse()   \u0e40\u0e23\u0e35\u0e22\u0e07\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e41\u0e1a\u0e1a\u0e01\u0e25\u0e31\u0e1a\u0e01\u0e31\u0e19     <pre><code>numbers = [3, 1, 4, 1, 5, 9, 2]\nnumbers.reverse()\n</code></pre></p> </li> <li> <p>lowerlist.count(value)    \u0e19\u0e31\u0e1a\u0e08\u0e33\u0e19\u0e27\u0e19\u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48\u0e04\u0e48\u0e32\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e43\u0e19 list     <pre><code>numbers = [3, 1, 4, 1, 5, 9, 2]\nprint(numbers.count(1))  # 2\n</code></pre></p> </li> <li> <p>lowerlist.index(value)    \u0e2b\u0e32\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07 index \u0e02\u0e2d\u0e07\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e23\u0e30\u0e1a\u0e38     <pre><code>numbers = [3, 1, 4, 1, 5, 9, 2]\nprint(numbers.index(5))  # 4\n</code></pre></p> </li> </ul>"},{"location":"python/python-basic/lists/#slicing","title":"Slicing","text":"<p>\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e15\u0e31\u0e14\u0e41\u0e1a\u0e48\u0e07\u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e1a\u0e32\u0e07\u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07 <code>list</code> \u0e2b\u0e23\u0e37\u0e2d <code>tuple</code> \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 \u0e0a\u0e48\u0e27\u0e07 index \u0e41\u0e25\u0e30\u0e21\u0e35\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49:</p> <pre><code>list[start:stop:step]\n</code></pre> <ul> <li>start: index \u0e02\u0e2d\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e15\u0e31\u0e27\u0e41\u0e23\u0e01\u0e17\u0e35\u0e48\u0e08\u0e30\u0e14\u0e36\u0e07\u0e2d\u0e2d\u0e01\u0e21\u0e32 (\u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e04\u0e37\u0e2d 0)</li> <li>stop: index \u0e02\u0e2d\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e15\u0e31\u0e27\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e17\u0e35\u0e48\u0e08\u0e30\u0e14\u0e36\u0e07\u0e2d\u0e2d\u0e01\u0e21\u0e32 (\u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e04\u0e37\u0e2d index \u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22)</li> <li>step: \u0e23\u0e30\u0e1a\u0e38\u0e08\u0e33\u0e19\u0e27\u0e19\u0e02\u0e31\u0e49\u0e19\u0e17\u0e35\u0e48\u0e02\u0e49\u0e32\u0e21\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07 index (\u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e04\u0e37\u0e2d 1)</li> </ul> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 <pre><code>my_list = [1, 2, 3, 4, 5, 6, 7]\n\n# \u0e14\u0e36\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 1 \u0e16\u0e36\u0e07\u0e01\u0e48\u0e2d\u0e19\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 4\nprint(my_list[1:4])\n# \u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c: [2, 3, 4]\n\n# \u0e14\u0e36\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e15\u0e49\u0e19\u0e08\u0e19\u0e16\u0e36\u0e07\u0e01\u0e48\u0e2d\u0e19\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 3\nprint(my_list[:3])\n# \u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c: [1, 2, 3]\n\n# \u0e14\u0e36\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 2 \u0e44\u0e1b\u0e08\u0e19\u0e16\u0e36\u0e07\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\nprint(my_list[2:])\n# \u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c: [3, 4, 5, 6, 7]\n\n# \u0e14\u0e36\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e17\u0e38\u0e01\u0e15\u0e31\u0e27\u0e40\u0e27\u0e49\u0e19 2 \u0e15\u0e31\u0e27\nprint(my_list[::2])\n# \u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c: [1, 3, 5, 7]\n\n# \u0e14\u0e36\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e22\u0e49\u0e2d\u0e19\u0e01\u0e25\u0e31\u0e1a\nprint(my_list[::-1])\n# \u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c: [7, 6, 5, 4, 3, 2, 1]\n</code></pre></p>"},{"location":"python/python-basic/lists/#string-indexing-slicing","title":"String Indexing &amp; Slicing","text":"<pre><code>text = \"Hello, World!\"\n\nprint(text[0])   # H\nprint(text[-1])  # !\nprint(text[0:5]) # Hello\nprint(text[:5])  # Hello (\u0e40\u0e23\u0e34\u0e48\u0e21\u0e08\u0e32\u0e01 index 0)\nprint(text[7:])  # World! (\u0e16\u0e36\u0e07\u0e15\u0e31\u0e27\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22)\n</code></pre>"},{"location":"python/python-basic/loops/","title":"Loops","text":"<p>\u0e43\u0e19 python \u0e08\u0e30\u0e21\u0e35 loops 2 \u0e41\u0e1a\u0e1a\u0e04\u0e37\u0e2d <code>while</code> \u0e41\u0e25\u0e30 <code>for</code></p>"},{"location":"python/python-basic/loops/#while","title":"while","text":"<p>while \u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02\u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e22\u0e31\u0e07\u0e04\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e08\u0e23\u0e34\u0e07 (True) \u0e42\u0e14\u0e22\u0e40\u0e2b\u0e21\u0e32\u0e30\u0e01\u0e31\u0e1a\u0e2a\u0e16\u0e32\u0e19\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e17\u0e35\u0e48\u0e08\u0e33\u0e19\u0e27\u0e19\u0e23\u0e2d\u0e1a\u0e44\u0e21\u0e48\u0e41\u0e19\u0e48\u0e19\u0e2d\u0e19</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07  prints 0,1,2,3,4</p> <pre><code># Prints out 0,1,2,3,4\n\ncount = 0\nwhile count &lt; 5:\n    print(count)\n    count += 1  # This is the same as count = count + 1\n</code></pre>"},{"location":"python/python-basic/loops/#for","title":"for","text":"<p>for \u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33\u0e15\u0e32\u0e21\u0e08\u0e33\u0e19\u0e27\u0e19\u0e17\u0e35\u0e48\u0e41\u0e19\u0e48\u0e19\u0e2d\u0e19 \u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33\u0e1c\u0e48\u0e32\u0e19\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23 (\u0e40\u0e0a\u0e48\u0e19 list, string, range)</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07  prints 0,1,2,3,4</p> <pre><code># Prints out 0,1,2,3,4\n\nfor num in range(0,5):\n    print(num)\n</code></pre>"},{"location":"python/python-basic/loops/#for-with-dictionaries","title":"for with dictionaries","text":"<p>for \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07 dict \u0e44\u0e14\u0e49 \u0e42\u0e14\u0e22\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e40\u0e09\u0e1e\u0e32\u0e30 keys, values, \u0e2b\u0e23\u0e37\u0e2d\u0e17\u0e31\u0e49\u0e07 key-value \u0e04\u0e39\u0e48 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e15\u0e48\u0e32\u0e07 \u0e46 \u0e40\u0e0a\u0e48\u0e19 .keys(), .values(), \u0e41\u0e25\u0e30 .items()</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e27\u0e23\u0e0b\u0e49\u0e33\u0e40\u0e09\u0e32\u0e30 keys</p> <pre><code>data = {'name': 'Alice', 'age': 25, 'city': 'Bangkok'}\n\n# \u0e27\u0e19\u0e0b\u0e49\u0e33\u0e1c\u0e48\u0e32\u0e19 keys \u0e42\u0e14\u0e22\u0e15\u0e23\u0e07\nfor key in data:\n    print(key)\n\n# \u0e2b\u0e23\u0e37\u0e2d\u0e43\u0e0a\u0e49 .keys() \u0e01\u0e47\u0e44\u0e14\u0e49\nfor key in data.keys():\n    print(key)\n</code></pre> <pre><code>data = {'name': 'Alice', 'age': 25, 'city': 'Bangkok'}\n\nfor key, value in data.items():\n    print(key, value)\n</code></pre>"},{"location":"python/python-basic/loops/#for-with-enumerate","title":"for with enumerate","text":"<p>\u0e40\u0e1b\u0e47\u0e19\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e17\u0e35\u0e48\u0e0a\u0e48\u0e27\u0e22\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e27\u0e19\u0e0b\u0e49\u0e33\u0e1c\u0e48\u0e32\u0e19\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 (\u0e40\u0e0a\u0e48\u0e19 \u0e25\u0e34\u0e2a\u0e15\u0e4c, \u0e2a\u0e15\u0e23\u0e34\u0e07 \u0e2b\u0e23\u0e37\u0e2d tuple) \u0e42\u0e14\u0e22\u0e43\u0e2b\u0e49\u0e04\u0e48\u0e32\u0e14\u0e31\u0e0a\u0e19\u0e35 (index) \u0e41\u0e25\u0e30\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e2d\u0e07\u0e04\u0e4c\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e43\u0e19\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e19\u0e31\u0e49\u0e19\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e01\u0e31\u0e19\u0e43\u0e19\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33</p> <pre><code>fruits = ['apple', 'banana', 'cherry']\n\nfor index, fruit in enumerate(fruits):\n    print(index, fruit)\n</code></pre>"},{"location":"python/python-basic/loops/#break-and-continue-statements","title":"break and continue statements","text":"<ul> <li>continue: \u0e43\u0e0a\u0e49\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e02\u0e49\u0e32\u0e21\u0e44\u0e1b\u0e22\u0e31\u0e07\u0e23\u0e2d\u0e1a\u0e16\u0e31\u0e14\u0e44\u0e1b</li> <li>break: \u0e43\u0e0a\u0e49\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e25\u0e39\u0e1b</li> </ul> <pre><code>for num in range(10):\n    if num == 3:\n        continue\nelif num == 6:\n    print(num)\n</code></pre>"},{"location":"python/python-basic/loops/#loops-with-else","title":"loops with else","text":"<p>else \u0e08\u0e30\u0e17\u0e33\u0e07\u0e32\u0e19 \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e25\u0e39\u0e1b\u0e17\u0e33\u0e07\u0e32\u0e19\u0e04\u0e23\u0e1a\u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23 break else \u0e08\u0e30\u0e44\u0e21\u0e48\u0e17\u0e33\u0e07\u0e32\u0e19 \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e21\u0e35\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 break \u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e25\u0e39\u0e1b\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e1a</p> <pre><code>numbers = [1, 2, 3, 4, 5]\ntarget = 7\n\nfor num in numbers:\n    if num == target:\n        print(\"\u0e1e\u0e1a\u0e04\u0e48\u0e32 \", target)\n        break\nelse:\n    print(\"\u0e44\u0e21\u0e48\u0e1e\u0e1a\u0e04\u0e48\u0e32 \", target)\n</code></pre>"},{"location":"python/python-basic/strings/","title":"Strings &amp; String Manipulation","text":"<p>Strings \u0e40\u0e1b\u0e47\u0e19\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e43\u0e19\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1e\u0e37\u0e49\u0e19\u0e10\u0e32\u0e19\u0e02\u0e2d\u0e07 Python \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21</p>"},{"location":"python/python-basic/strings/#creating-strings","title":"Creating Strings","text":"<pre><code>text1 = \"Hello, World!\"\ntext2 = 'Hello, World!'\ntext3 = \"\"\"This is a \nmultiline string\"\"\"\n</code></pre>"},{"location":"python/python-basic/strings/#string-methods","title":"String Methods","text":"<ul> <li> <p><code>lower</code>  \u0e41\u0e1b\u0e25\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e40\u0e25\u0e47\u0e01     <pre><code>print(\"HELLO\".lower())\n</code></pre></p> </li> <li> <p><code>upper</code>  \u0e41\u0e1b\u0e25\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e43\u0e2b\u0e0d\u0e48     <pre><code>print(\"hello\".lower())\n</code></pre></p> </li> <li> <p><code>strip</code>   \u0e25\u0e1a\u0e0a\u0e48\u0e2d\u0e07\u0e27\u0e48\u0e32\u0e07\u0e2b\u0e31\u0e27\u0e17\u0e49\u0e32\u0e22     <pre><code>print(\" hello \".strip())\n</code></pre></p> </li> <li> <p><code>replace</code> \u0e41\u0e17\u0e19\u0e17\u0e35\u0e48\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21     <pre><code>print(\"apple\".replace(\"a\", \"o\"))\n</code></pre></p> </li> <li> <p><code>split</code> \u0e41\u0e22\u0e01\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e40\u0e1b\u0e47\u0e19 list     <pre><code>print(\"a,b,c\".split(\",\"))\n</code></pre></p> </li> <li> <p><code>join</code> \u0e23\u0e27\u0e21 list \u0e40\u0e1b\u0e47\u0e19 string     <pre><code>print('\"-\".join([\"a\", \"b\", \"c\"])')\n</code></pre></p> </li> </ul>"},{"location":"python/python-basic/strings/#string-concatenation","title":"String Concatenation","text":"<p>\u0e01\u0e32\u0e23\u0e19\u0e33\u0e2a\u0e15\u0e23\u0e34\u0e07 (string) \u0e21\u0e32\u0e15\u0e48\u0e2d\u0e01\u0e31\u0e19\u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e15\u0e23\u0e34\u0e07\u0e43\u0e2b\u0e21\u0e48 \u0e17\u0e33\u0e44\u0e14\u0e49\u0e2b\u0e25\u0e32\u0e22\u0e27\u0e34\u0e18\u0e35</p> <ul> <li> <p>\u0e43\u0e0a\u0e49 + (\u0e1a\u0e27\u0e01)     <pre><code>x = \"Python is \"\ny = \"awesome\"\nz =  x + y\nprint(z)\n</code></pre></p> <pre><code>a = \"Hello\"\nb = \"World\"\nc = a + \" \" + b\n</code></pre> </li> <li> <p><code>f-Strings</code></p> <pre><code>name = \"Alice\"\nage = 25\nprint(f\"My name is {name} and I am {age} years old.\")\n</code></pre> </li> <li> <p><code>.format()</code></p> <pre><code>print(\"My name is {} and I am {} years old.\".format(name, age))\n</code></pre> </li> </ul>"},{"location":"python/python-basic/tuples/","title":"Tuples","text":"<p>Tuple \u0e40\u0e1b\u0e47\u0e19\u0e42\u0e04\u0e23\u0e07\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e04\u0e25\u0e49\u0e32\u0e22\u0e01\u0e31\u0e1a List \u0e41\u0e15\u0e48\u0e21\u0e35\u0e04\u0e38\u0e13\u0e2a\u0e21\u0e1a\u0e31\u0e15\u0e34\u0e17\u0e35\u0e48 \u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e04\u0e48\u0e32\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49 (Immutable) \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e41\u0e25\u0e49\u0e27 \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e1e\u0e34\u0e48\u0e21, \u0e25\u0e1a \u0e2b\u0e23\u0e37\u0e2d\u0e41\u0e01\u0e49\u0e44\u0e02\u0e04\u0e48\u0e32\u0e44\u0e14\u0e49</p>"},{"location":"python/python-basic/tuples/#tuple","title":"\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 Tuple","text":"<pre><code>numbers = (1, 2, 3, 4, 5)  \nfruits = (\"apple\", \"banana\", \"cherry\")  \nmixed = (10, \"Hello\", True, 3.14)  \n\nprint(numbers)   # (1, 2, 3, 4, 5)\nprint(fruits)    # ('apple', 'banana', 'cherry')\nprint(mixed)     # (10, 'Hello', True, 3.14)\n</code></pre>"},{"location":"python/python-basic/tuples/#tuple_1","title":"\u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e04\u0e48\u0e32\u0e20\u0e32\u0e22\u0e43\u0e19 Tuple","text":"<p>\u0e43\u0e0a\u0e49 index \u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19 list (\u0e40\u0e23\u0e34\u0e48\u0e21\u0e08\u0e32\u0e01 0)</p> <pre><code>fruits = (\"apple\", \"banana\", \"cherry\")\n\nprint(fruits[0])   # apple\nprint(fruits[1])   # banana\nprint(fruits[2])   # cherry\n\n# \u0e43\u0e0a\u0e49 index \u0e15\u0e34\u0e14\u0e25\u0e1a\nprint(fruits[-1])  # cherry\nprint(fruits[-2])  # banana\n</code></pre>"},{"location":"python/python-basic/tuples/#tuple_2","title":"\u0e01\u0e32\u0e23\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e04\u0e48\u0e32\u0e40\u0e02\u0e49\u0e32 Tuple","text":"<p>\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01 tuple \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e04\u0e48\u0e32\u0e15\u0e23\u0e07\u0e46 \u0e44\u0e14\u0e49 \u0e41\u0e15\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e17\u0e33\u0e44\u0e14\u0e49\u0e42\u0e14\u0e22 \u0e19\u0e33 tuple \u0e21\u0e32\u0e15\u0e48\u0e2d\u0e01\u0e31\u0e19</p> <pre><code>fruits = (\"apple\", \"banana\")\nnew_fruits = fruits + (\"cherry\",)\n\nprint(new_fruits)  # ('apple', 'banana', 'cherry')\n</code></pre>"}]}